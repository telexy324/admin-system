// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用户模型
model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  name      String
  email     String   @unique
  roleId    Int
  role      Role     @relation(fields: [roleId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联
  logs      Log[]

  @@map("users")
}

// 角色模型
model Role {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  description String
  users       User[]
  permissions Permission[] @relation("RoleToPermission")
  menus       Menu[]       @relation("RoleToMenu")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@map("roles")
}

// 权限模型
model Permission {
  id          Int      @id @default(autoincrement())
  name        String
  code        String   @unique
  description String
  roles       Role[]   @relation("RoleToPermission")
  menus       Menu[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("permissions")
}

// 菜单模型
model Menu {
  id          Int          @id @default(autoincrement())
  name        String
  path        String       @unique
  icon        String?
  parentId    Int?
  order       Int         @default(0)
  permissions Permission[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  // 关联
  parent      Menu?    @relation("MenuToSubMenu", fields: [parentId], references: [id])
  children    Menu[]   @relation("MenuToSubMenu")
  roles       Role[]   @relation("RoleToMenu")

  @@map("menus")
}

// 系统日志模型
model Log {
  id        Int      @id @default(autoincrement())
  userId    Int
  action    String
  details   Json?
  ip        String?
  createdAt DateTime @default(now())

  // 关联
  user      User     @relation(fields: [userId], references: [id])

  @@map("logs")
}
